/*
 * U-Boot configuration for TomTom platforms
 *
 * Copyright (C) 2010 TomTom International B.V.
 * 
 ************************************************************************
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * version 2 as published by the Free Software Foundation.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 
 * 02110-1301, USA.
 ************************************************************************
 */

#include <mem_regions.h>
#include <asm/sizes.h>

/**
 * Bootscripts are at <root>/board/tomtom/common/<script>.uds
 **/

/************************************************************************
* Boot sequence                                                         *
************************************************************************/

/* The following are set up in board_init, give them a default */
#define CONFIG_PREBOOT			"UNSET"
#define CONFIG_BOOTCOMMAND		"UNSET"
#define CONFIG_BOOTCOUNT_LIMIT
#define CONFIG_BOOT_RETRY_TIME		0

#ifdef CONFIG_DEBUG_BUILD
# define CONFIG_BOOTDELAY		1
# define CONFIG_AUTOBOOT_KEYED
# define CONFIG_AUTOBOOT_STOP_STR	"asdf"
# define CONFIG_AUTOBOOT_PROMPT						\
	"*******************************************************\n"	\
	"*                 Welcome to U-Boot                   *\n"	\
	"*                                                     *\n"	\
	"*            ### THIS IS A DEBUG BUILD ###            *\n"	\
	"*                                                     *\n"	\
	"*******************************************************\n"	\
	"* - Command 'boot' will boot into main system         *\n"	\
	"* - Command 'altboot' will boot into rescue system    *\n"	\
	"*******************************************************\n\n"	\
	"Type " CONFIG_AUTOBOOT_STOP_STR " to enter U-Boot\n"
#else
# define CONFIG_BOOTDELAY		0
# define CONFIG_NON_INTERACTIVE
#endif

/* Required before preboot.ush has been executed */
#define CONFIG_EXTRA_ENV_SETTINGS \
	"verify=no\0" \
	"bootlimit=1\0"

/************************************************************************
* ATAGs                                                                 *
************************************************************************/

#define CONFIG_CMDLINE_TAG
#define CONFIG_FACTORYDATA_TAG
#define CONFIG_SETUP_MEMORY_TAGS
//#define CONFIG_SERIAL_TAG /* TODO - implement get_board_serial */

/************************************************************************
* Memory map                                                            *
************************************************************************/

#define CFG_ENV_SIZE		SZ_16K
#define CFG_GBL_DATA_SIZE	128
#define CFG_LOAD_ADDR		MEMADDR_KERN_START
#define CFG_FDT_ADDR		MEMADDR_FDT_START
#define CFG_MALLOC_LEN		(CFG_ENV_SIZE		+ SZ_1M)
#define CFG_MEMTEST_SCRATCH	((void *) \
				 (((ulong)&_end + SZ_4K) & ~0xfff))
#define CFG_MEMTEST_START	(CFG_MEMTEST_SCRATCH	+ SZ_4K)
#define CFG_MEMTEST_END		(PHYS_SDRAM_1 + gd->bd->bi_dram[0].size \
				 - sizeof(int))
#define CFG_ATAG_ADDR		(PHYS_SDRAM_1 + SZ_16K)

/************************************************************************
* U-Boot core settings                                                  *
************************************************************************/

#define __NON_LEGACY
#define CONFIG_BAUDRATE		115200
#define CONFIG_DOS_PARTITION
#define CONFIG_FDT_MACHID
#define CONFIG_HW_WATCHDOG
#define CONFIG_TT_HEADER
#define CONFIG_TT_LIBFDT
#define CONFIG_ZIMAGE_BOOT

#ifdef CONFIG_DEBUG_BUILD
# define CONFIG_OF_LIBFDT
#endif

#ifndef CONFIG_DEBUG_BUILD
# define CONFIG_CHECK_SIGNATURE
#endif

#define CFG_ALT_MEMTEST
#define CFG_BAUDRATE_TABLE	{9600, 19200, 38400, 57600, 115200}
#define CFG_CBSIZE		SZ_1K
#define CFG_ENV_IS_NOWHERE
#define CFG_MAXARGS		16
#define CFG_MEMTEST_ITERS	1
#define CFG_NO_FLASH
#define CFG_PBSIZE		SZ_1K
#define CFG_PROMPT		"BL> "

/************************************************************************
* Shell commands                                                        *
************************************************************************/

#ifdef CONFIG_DEBUG_BUILD
# define CFG_LONGHELP
#endif

#if __U_BOOT__1_3_4__

#define CONFIG_CMD_ALTBOOT
#define CONFIG_CMD_AUTOSCRIPT
#define CONFIG_CMD_BOOT
#define CONFIG_CMD_BOOTCONF
#define CONFIG_CMD_BOOTD
#define CONFIG_CMD_EXT2
#define CONFIG_CMD_FD
#define CONFIG_CMD_FLIPFLOP
#define CONFIG_CMD_LOADB	/* loady */
#define CONFIG_CMD_IGNORE
#define CONFIG_CMD_PART
#define CONFIG_CMD_RUN
#define CONFIG_CMD_WATCHDOG
#define CONFIG_CMD_MEMORY

#ifdef CONFIG_DEBUG_BUILD
# define CONFIG_CMD_BDI
# define CONFIG_CMD_CACHE
#endif

#else /* __U_BOOT__1_3_4__ */

#define CONFIG_CMD_ALTBOOT
#define CONFIG_CMD_BOOTCONF
#define CONFIG_CMD_FD
#define CONFIG_CMD_FLIPFLOP
#define CONFIG_CMD_IGNORE

#define BASE_COMMANDS (	CFG_CMD_MEMORY		| \
			CFG_CMD_BOOTD		| \
			CFG_CMD_LOADB		| /* loady */ \
			CFG_CMD_RUN		| \
			CFG_CMD_ECHO		| \
			CFG_CMD_AUTOSCRIPT	| \
			CFG_CMD_MMC		| \
			CFG_CMD_FAT		| \
			CFG_CMD_EXT2		| \
			0 )

#define DEBUG_COMMANDS (CFG_CMD_BDI		| \
			/* CFG_CMD_CACHE	| */ \
			0 )

#ifdef CONFIG_DEBUG_BUILD
# define CONFIG_COMMANDS (BASE_COMMANDS | DEBUG_COMMANDS)
#else
# define CONFIG_COMMANDS (BASE_COMMANDS)
#endif

#endif /* __U_BOOT__1_3_4__ */

#include <cmd_confdefs.h>

/* EOF */

